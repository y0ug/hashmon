package auth

import (
	"net/http"
	"time"

	"github.com/y0ug/hashmon/pkg/auth/providers"
)

// Config holds the overall authentication configuration, including multiple providers.
type Config struct {
	AuthType               string                        // Type of authentication (e.g., oauth2, none)
	JwtSecret              []byte                        // Secret key for JWT signing
	AccessTokenExpiration  time.Duration                 // Access token expiration duration
	RefreshTokenExpiration time.Duration                 // Refresh token expiration duration
	SecureCookie           bool                          // Whether to use secure cookies
	CookieSameSite         http.SameSite                 // SameSite attribute for cookies
	Providers              map[string]providers.Provider // Map of provider instance
	RedirectWhitelist      []string                      // Add a list of allowed redirect URLs
}

// HttpResp represents the standard HTTP response structure.
// swagger:model
type HttpResp struct {
	Status  string      `json:"status" example:"success"`                           // Response status (success or error)
	Data    interface{} `json:"data,omitempty"`                                     // Response data
	Message string      `json:"message" example:"Operation completed successfully"` // Response message
}

// ProviderTokens holds tokens received from an OAuth2 provider.
type ProviderTokens struct {
	AccessToken  string    `json:"access_token"`            // Provider's access token
	RefreshToken string    `json:"refresh_token,omitempty"` // Provider's refresh token (optional)
	ExpiresAt    time.Time `json:"expires_at"`              // Expiration time of the access token
}

// TokenResponse represents the tokens generated by the application.
type TokenResponse struct {
	AccessToken  string `json:"access_token"`  // Application's access token
	RefreshToken string `json:"refresh_token"` // Application's refresh token
	TokenType    string `json:"token_type"`    // Type of token (e.g., Bearer)
	ExpiresIn    int64  `json:"expires_in"`    // Access token expiration in seconds
}

// UserInfo represents the authenticated user's information.
type UserInfo struct {
	Sub        string `json:"sub"`                   // User's unique identifier
	Name       string `json:"name"`                  // User's name
	Email      string `json:"email"`                 // User's email
	Provider   string `json:"provider"`              // OAuth2 provider name
	Picture    string `json:"picture,omitempty"`     // User's profile picture (optional)
	ProfileURL string `json:"profile_url,omitempty"` // User's profile URL (optional)
}

// StatusResponse defines the structure of the /status response.
type StatusResponse struct {
	Authenticated bool     `json:"authenticated"`     // Whether the user is authenticated
	User          UserInfo `json:"user,omitempty"`    // User information (if authenticated)
	Message       string   `json:"message,omitempty"` // Additional message (optional)
}
